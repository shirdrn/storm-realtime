<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/aop/spring-jdbc-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:jedis.properties</value>
				<value>classpath*:druid.properties</value>
			</list>
		</property>
	</bean>

	<bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy">
		<constructor-arg index="0">
			<bean class="org.apache.commons.pool2.impl.GenericObjectPoolConfig">
				<!-- Maximum connection count  -->
				<property name="maxTotal" value="${redis.pool.maxTotal}" />
				<!-- Maximum idle connection count -->
				<property name="maxIdle" value="${redis.pool.maxIdle}" />
				<!-- Minimum idle connection count -->
				<property name="minIdle" value="${redis.pool.minIdle}" />
				<!-- Maximum wait time -->
				<property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />
				<!-- Validate connection got from pool -->
				<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
				<!-- Validate connection returned to pool -->
				<property name="testOnReturn" value="${redis.pool.testOnReturn}" />
				<!-- Test while during idle time -->
				<property name="testWhileIdle" value="true" />
			</bean>
		</constructor-arg>
		<constructor-arg index="1" value="${redis.host}" />
		<constructor-arg index="2" value="${redis.port}" />
		<constructor-arg index="3" value="${redis.timeout}" />
		<constructor-arg index="4" value="${redis.password}" />
	</bean>
	
	<bean id="dataSourceX" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${druid.driverClassName}" />
		<property name="url" value="${druid.url}" />
		<property name="username" value="${druid.username}" />
		<property name="password" value="${druid.password}" />
		<property name="initialSize" value="${druid.initialSize}" />
		<property name="minIdle" value="${druid.minIdle}" />
		<property name="maxActive" value="${druid.maxActive}" />
		<property name="maxWait" value="${druid.maxWait}" />
		<property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${druid.validationQuery}" />
		<property name="testWhileIdle" value="${druid.testWhileIdle}" />
		<property name="testOnBorrow" value="${druid.testOnBorrow}" />
		<property name="testOnReturn" value="${druid.testOnReturn}" />
		<property name="removeAbandoned" value="${druid.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${druid.removeAbandonedTimeout}" />
		<property name="logAbandoned" value="${druid.logAbandoned}" />
		<property name="filters" value="${druid.filters}" />
	</bean>
	
	<bean id="dataSourceXProxy" class="org.jdbcdslog.ConnectionPoolDataSourceProxy">
		<property name="targetDSDirect" ref="dataSourceX" />
	</bean>
	<bean id="jdbcTemplateX" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSourceXProxy" />
	</bean>
</beans>